class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        if(root==NULL) return {};
        vector<vector<int>>result; 
        queue<pair<TreeNode*,pair<int,int>>>q;
        map<int ,map<int,multiset<int>>>mp;
        q.push({root,{0,0}});
        while(!q.empty()){
            pair<TreeNode*,pair<int,int>> p=q.front(); q.pop();
            TreeNode* tempNode=p.first;
            int vertical=p.second.first;
            int level=p.second.second;
            mp[vertical][level].insert(tempNode->val);
            if(tempNode->left)q.push({tempNode->left,{vertical-1,level+1}});
            if(tempNode->right)q.push({tempNode->right,{vertical+1,level+1}});
        }
        for(auto x:mp){
            vector<int>tempo;
            for(auto y:x.second){
                tempo.insert(tempo.end(),y.second.begin(),y.second.end());
            }
            result.push_back(tempo);
        }
        return result;
    }
};
